[project]
name = "data-request-tools"
description = "tools for handling CORDEX data request"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["CORDEX", "CF conventions"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pandas",
    "pyyaml",
]
dynamic = ["version"]

[project.optional-dependencies]
all = ["pooch"]

[project.urls]
repository = "https://github.com/WCRP-CORDEX/data-request-tools.git"

[build-system]
requires = [
    # xarray is need for dynamic version string
    "pandas",
    "pyyaml",
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["data_request"]

[tool.setuptools.exclude-package-data]
data_request = ["tests/*"]

[tool.setuptools.dynamic]
version = {attr = "data_request.__version__"}

[tool.setuptools_scm]
fallback_version = "999"
write_to = "data_request/_version.py"
write_to_template= '__version__ = "{version}"'
tag_regex= "^(?P<prefix>v)?(?P<version>[^\\+]+)(?P<suffix>.*)?$"

[tool.black]
target-version = ["py38"]

[tool.ruff]
target-version = "py38"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.pytest]
python_files = "test_*.py"
testpaths = ["data_request/tests"]

[tool.rstcheck]
report_level = "WARNING"
ignore_roles = [
    "pr",
    "issue",
]
ignore_directives = [
    "ipython",
    "autodata",
    "autosummary",
]

[tool.nbqa.md]
mdformat = true

[tool.coverage.run]
omit = [
    "data_request_tools/tests/*",
    "data_request_tools/cleaning.py",
]
